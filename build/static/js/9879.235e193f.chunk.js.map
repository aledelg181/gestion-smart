{"version":3,"file":"static/js/9879.235e193f.chunk.js","mappings":"4NAUA,MAAMA,EAAUC,EAAAA,YACZ,CAAAC,EAAuGC,KAAS,IAA/G,SAAEC,EAAQ,QAAEC,EAAO,aAAEC,EAAY,UAAEC,EAAS,UAAEC,EAAS,GAAEC,EAAK,CAAC,EAAC,UAAEC,EAAY,CAAC,EAAC,MAAEC,KAAUC,GAAQV,EACjG,MAAMW,GAAQC,EAAAA,EAAAA,KAEd,OACIC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CACDb,IAAKA,EACLM,GAAI,CACAQ,OAAQ,YACRC,YAAoC,SAAvBL,EAAMM,QAAQC,KAAkBP,EAAMM,QAAQE,KAAKC,MAAQ,GAAKT,EAAMM,QAAQI,KAAK,KAChG,SAAU,CACNC,UAAkC,SAAvBX,EAAMM,QAAQC,KAAkB,qCAAuC,sCAEnFX,MAEHG,EAAMR,SAAA,EAGRG,GAAaI,IACXc,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACjB,GAAI,CAAEkB,EAAG,KAAOhB,OAAOc,EAAAA,EAAAA,KAACG,EAAAA,EAAU,CAACC,QAAQ,KAAIzB,SAAEO,IAAqBmB,OAAQtB,IAE7FD,GAAaI,IACVc,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACjB,GAAI,CAAEkB,EAAG,KAAOhB,OAAOc,EAAAA,EAAAA,KAACG,EAAAA,EAAU,CAACC,QAAQ,KAAIzB,SAAEO,IAAqBmB,OAAQtB,IAI7FG,IACGc,EAAAA,EAAAA,KAACM,EAAAA,EAAO,CACJtB,GAAI,CACAuB,QAAS,EACTd,YAAoC,SAAvBL,EAAMM,QAAQC,KAAkBP,EAAMM,QAAQE,KAAKC,MAAQ,GAAKT,EAAMM,QAAQI,KAAK,QAM3GlB,IACGoB,EAAAA,EAAAA,KAACQ,EAAAA,EAAW,CAACxB,GAAI,CAAEkB,EAAG,OAAQjB,GAAawB,UAAW5B,GAAgB,GAAGF,SACpEA,KAGPC,GAAWD,IACV,IAgBnBJ,EAAQmC,aAAe,CACnB9B,SAAS,GAGb,S,2LC5DA,MAgDA,EAhDmBH,IAAiB,IAAhB,OAAEkC,GAAQlC,EAC1B,MAAMW,GAAQC,EAAAA,EAAAA,KACRuB,GAAWC,EAAAA,EAAAA,OAEX,QAAEC,IAAYC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,SAejD,OACIjB,EAAAA,EAAAA,KAACkB,EAAAA,EAAa,CACVC,WAAS,EACTC,MAAOT,EAAOzB,MACdmC,SAjBoBC,IACxBV,GACIW,EAAAA,EAAAA,IACI,CACIC,GAAIb,EAAOa,GACXtC,MAAOoC,EAAMG,OAAOL,MACpBM,QAASf,EAAOe,SAEpBZ,GAEP,EAQG9B,GAAI,CACA2C,GAAI,IACJ,gBAAiB,CACbC,QAAgC,SAAvBxC,EAAMM,QAAQC,KAAkBP,EAAMM,QAAQE,KAAK,KAAOR,EAAMM,QAAQI,KAAK,KAE1F,gBAAiB,CACb8B,QAAgC,SAAvBxC,EAAMM,QAAQC,KAAkBP,EAAMM,QAAQE,KAAK,KAAOR,EAAMM,QAAQI,KAAK,KAE1F,2BAA4B,CACxB+B,QAAS,SAEb,aAAc,CAAED,QAAS,eACzB,aAAc,CAAEC,QAAS,QACzB,2BAA4B,CAAEA,QAAS,UAE3CC,YAAY,SACd,E,mJC9BV,MAAMC,EAAYC,EAAAA,OAGZC,EAAiBA,CAACC,EAAYC,EAAgB/C,EAAOgD,KACvD,MAAMR,EAAiC,SAAvBxC,EAAMM,QAAQC,KAAkBP,EAAMM,QAAQ2C,WAAWC,MAAQ,GAAKlD,EAAMM,QAAQI,KAAK,IACzG,MAAO,CACHyC,WAAY,OACZC,OAAS,YACTC,QAAS,GACTjD,OAAQ,YACRC,YAAoC,SAAvBL,EAAMM,QAAQC,KAAkBP,EAAMM,QAAQ2C,WAAWK,QAAUtD,EAAMM,QAAQiD,QAAQ,KAAO,GAC7GC,gBAAiBV,EAAaN,EAAUxC,EAAMM,QAAQ2C,WAAWC,MACjEO,aAAcT,KACXD,EACN,EAsKL,EAjKc1D,IAAsB,IAArB,KAAEqE,EAAI,MAAEC,GAAOtE,EAC1B,MAAMW,GAAQC,EAAAA,EAAAA,KACRuB,GAAWC,EAAAA,EAAAA,MACXmC,EAAcF,EAAKG,OAASlB,EAAW,KAAIe,EAAKG,UAEhD,aAAEJ,IAAiBK,EAAAA,EAAAA,KACnBjC,GAASF,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,UACtC,UAAEkC,EAAS,MAAEC,EAAK,QAAEtC,GAAYG,EAEhCoC,EAAYF,EAAUG,QAAQC,IAAK,IAAAC,EAAA,OAAU,OAALD,QAAK,IAALA,GAAc,QAATC,EAALD,EAAO7B,eAAO,IAAA8B,OAAT,EAALA,EAAgBF,QAAQG,GAAWA,IAAWX,EAAKtB,KAAI,EAAE,IAAE,GAEnGkC,EAAkBlC,IACpBZ,GAAS+C,EAAAA,EAAAA,IAAWnC,GAAI,GAGrBoC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,MACnCC,EAAezC,IACjBuC,EAAiB,OAALvC,QAAK,IAALA,OAAK,EAALA,EAAO0C,cAAc,EAG/BC,EAAcA,KAChBJ,EAAY,KAAK,GAGdK,EAAMC,IAAWL,EAAAA,EAAAA,WAAS,GAC3BM,EAAoBC,IACtBF,GAAQ,GACJE,IACAzD,GAAS0D,EAAAA,EAAAA,IAAWxB,EAAKtB,GAAI4B,EAAOtC,EAASqC,IAC7CvC,GACI2D,EAAAA,EAAAA,IAAa,CACTL,MAAM,EACNM,QAAS,4BACTC,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CvE,QAAS,QACTwE,MAAO,CACHC,MAAO,WAEXC,OAAO,KAGnB,GAGGC,EAAiBC,IAAsBlB,EAAAA,EAAAA,WAAS,GACjDmB,EAAwBA,KAC1BD,GAAoBE,IAAeA,GAAU,EAG3CC,EAAYA,KACdH,GAAoBE,IAAeA,GAAU,EAGjD,OACIlF,EAAAA,EAAAA,KAACoF,EAAAA,GAAS,CAAeC,YAAavC,EAAKtB,GAAIuB,MAAOA,EAAMpE,SACvDA,CAAC2G,EAAUC,KACRjG,EAAAA,EAAAA,MAAA,OACIZ,IAAK4G,EAASE,YACVF,EAASG,kBACTH,EAASI,gBACbC,MAAO1D,EAAesD,EAASrD,WAAYoD,EAASG,eAAeE,MAAOvG,EAAQ,GAAEyD,OAAkBlE,SAAA,EAEtGW,EAAAA,EAAAA,MAACsG,EAAAA,EAAK,CAACC,UAAU,MAAMC,eAAe,gBAAgBC,WAAW,SAAS/G,GAAI,CAAE2C,GAAI0B,GAAa,IAAO,GAAI1E,SAAA,EACxGqB,EAAAA,EAAAA,KAACG,EAAAA,EAAU,CACP6F,QAASA,IAAMtC,EAAeZ,EAAKtB,IACnCpB,QAAQ,YACRpB,GAAI,CACA6C,QAAS,eACToE,MAAO,oBACPC,aAAc,WACdC,WAAY,SACZC,SAAU,SACVC,cAAe,SACfC,OAAQ,WACV3H,SAEDmE,EAAK5D,SAGVc,EAAAA,EAAAA,KAACuG,EAAAA,EAAU,CAACvH,GAAI,CAAE6D,aAAc,QAAUmD,QAASjC,EAAa,gBAAc,eAAe,gBAAc,OAAMpF,UAC7GqB,EAAAA,EAAAA,KAACwG,EAAAA,EAAU,CAACC,UAAU,OAAOC,KAAK,QAAQC,eAAa,EAAC,aAAW,eAAchI,UAC7EqB,EAAAA,EAAAA,KAAC4G,EAAAA,EAAmB,CAACC,SAAS,iBAGtCvH,EAAAA,EAAAA,MAACwH,EAAAA,EAAI,CACDtF,GAAG,eACHoC,SAAUA,EACVmD,aAAW,EACX7C,KAAM8C,QAAQpD,GACdqD,QAAShD,EACT7D,QAAQ,eACRqE,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBuC,gBAAiB,CACbxC,SAAU,MACVC,WAAY,SACdhG,SAAA,EAEFqB,EAAAA,EAAAA,KAACmH,EAAAA,EAAQ,CACLnB,QAASA,KACL/B,IACAP,EAAeZ,EAAKtB,GAAG,EACzB7C,SACL,UAGDqB,EAAAA,EAAAA,KAACmH,EAAAA,EAAQ,CACLnB,QAASA,KACL/B,IACAE,GAAQ,EAAK,EACfxF,SACL,cAIJuF,IAAQlE,EAAAA,EAAAA,KAACoH,EAAAA,EAAe,CAAClI,MAAO4D,EAAK5D,MAAOgF,KAAMA,EAAMD,YAAaG,OAEzEf,IACG/D,EAAAA,EAAAA,MAAA+H,EAAAA,SAAA,CAAA1I,SAAA,EACIW,EAAAA,EAAAA,MAACsG,EAAAA,EAAK,CAACC,UAAU,MAAMyB,QAAS,GAAKvB,WAAW,SAAQpH,SAAA,EACpDqB,EAAAA,EAAAA,KAACuH,EAAAA,EAAO,CAACrI,MAAM,aAAYP,UACvBqB,EAAAA,EAAAA,KAACwH,EAAAA,EAAmB,CAAC3C,MAAM,YAAY7F,GAAI,CAAE6H,SAAU,iBAE3D7G,EAAAA,EAAAA,KAACuH,EAAAA,EAAO,CAACrI,MAAOmE,EAAUnE,MAAMP,UAC5BW,EAAAA,EAAAA,MAACmI,EAAAA,EAAI,CACDrH,QAAQ,UACRyE,MAAM,YACN6C,UAAU,QACV1B,QAASb,EACTnG,GAAI,CAAEsH,OAAQ,UAAWqB,GAAI,IAAMhJ,SAAA,CACtC,eACgB0E,EAAU7B,WAIlCuD,IACG/E,EAAAA,EAAAA,KAAC4H,EAAAA,EAAS,CAACrE,MAAOF,EAAWa,KAAMa,EAAiB8C,iBAAkB5C,OAIjFjC,IACGhD,EAAAA,EAAAA,KAAC8H,EAAAA,EAAS,CACNrB,UAAU,MACVxD,MAAOD,EACPhE,GAAI,CAAEiH,MAAO,OAAQpD,aAAc,EAAGkF,GAAI,KAC1C7I,MAAM,sBA7FV4D,EAAKtB,GAkGT,E,qFCrJL,SAASwG,EAAIC,EAAMC,GAEhC,IADAC,EAAAA,EAAAA,GAAa,EAAGC,YACXF,GAAkC,YAAtBG,EAAAA,EAAAA,GAAQH,GAAwB,OAAO,IAAII,KAAKC,KACjE,IAAIC,EAAQN,EAASM,OAAQC,EAAAA,EAAAA,GAAUP,EAASM,OAAS,EACrDE,EAASR,EAASQ,QAASD,EAAAA,EAAAA,GAAUP,EAASQ,QAAU,EACxDC,EAAQT,EAASS,OAAQF,EAAAA,EAAAA,GAAUP,EAASS,OAAS,EACrDC,EAAOV,EAASU,MAAOH,EAAAA,EAAAA,GAAUP,EAASU,MAAQ,EAClDC,EAAQX,EAASW,OAAQJ,EAAAA,EAAAA,GAAUP,EAASW,OAAS,EACrDC,EAAUZ,EAASY,SAAUL,EAAAA,EAAAA,GAAUP,EAASY,SAAW,EAC3DC,EAAUb,EAASa,SAAUN,EAAAA,EAAAA,GAAUP,EAASa,SAAW,EAG3DC,ECnCS,SAAmBC,EAAWC,IAC3Cf,EAAAA,EAAAA,GAAa,EAAGC,WAChB,IAAIe,GAASV,EAAAA,EAAAA,GAAUS,GACvB,OAAOE,EAAAA,EAAAA,GAAUH,GAAYE,EAC/B,CD+B0BE,CAAUpB,EAAMS,EAAiB,GAARF,GAG7Cc,EEtCS,SAAiBL,EAAWC,IACzCf,EAAAA,EAAAA,GAAa,EAAGC,WAChB,IAAIe,GAASV,EAAAA,EAAAA,GAAUS,GACvB,OAAOK,EAAAA,EAAAA,GAAQN,GAAYE,EAC7B,CFkCwBK,CAAQR,EAAmBJ,EAAe,EAARD,GAKpDc,EAAyB,KADVV,EAAyB,IADzBD,EAAkB,GAARD,IAI7B,OADgB,IAAIP,KAAKgB,EAAgBI,UAAYD,EAEvD,C,2DG9CA,MAAME,EAAS,IAAIC,EAAAA,OAqInB,EAjIgBnL,IAAmB,IAAlB,SAAEoL,GAAUpL,EACzB,MAAMmC,GAAWC,EAAAA,EAAAA,OAEViJ,EAAYC,IAAiBjG,EAAAA,EAAAA,WAAS,IACvC,QAAEhD,EAAO,MAAEsC,EAAK,UAAED,IAAcpC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,SAC7D+I,EAAsBA,KACxBD,GAAeE,IAAUA,GAAK,GAG3B/K,EAAOgL,IAAYpG,EAAAA,EAAAA,UAAS,KAC5BqG,EAASC,IAActG,EAAAA,EAAAA,WAAS,GAEjCuG,EAAUA,KACZ,GAAInL,EAAMoL,OAAS,EAAG,CAClB,MAAMC,EAAU,CACZ/I,GAAK,GAAEmI,EAAOa,QAAQ,CAAEC,IAAK,IAAMC,IAAK,SACxCxL,QACAyL,QAAS3C,EAAI,IAAIM,KAAQ,CAAEM,KAAM,EAAGC,MAAO,EAAGC,QAAS,KACvD7F,OAAO,EACP2H,OAAQ,GACRC,YAAa,GACbC,SAAU,MACVC,YAAa,IAGjBnK,GAASoK,EAAAA,EAAAA,IAAQnB,EAAU/I,EAASyJ,EAASnH,EAAO,IAAKD,IACzDvC,GACI2D,EAAAA,EAAAA,IAAa,CACTL,MAAM,EACNM,QAAS,wBACTC,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CvE,QAAS,QACTwE,MAAO,CACHC,MAAO,WAEXC,OAAO,KAGfkF,IACAE,EAAS,GACb,MACIE,GAAW,EACf,EAmBJ,OACI9K,EAAAA,EAAAA,MAAC2L,EAAAA,GAAI,CAACC,WAAS,EAACnF,WAAW,SAASuB,QAAS,EAAGtI,GAAI,CAAEmM,UAAW,GAAIxM,SAAA,CAChEmL,IACG9J,EAAAA,EAAAA,KAACiL,EAAAA,GAAI,CAACnI,MAAI,EAACsI,GAAI,GAAGzM,UACdqB,EAAAA,EAAAA,KAACzB,EAAAA,EAAO,CAACU,UAAW,CAAEiB,EAAG,EAAGmL,WAAY,mCAAoC1M,UACxEW,EAAAA,EAAAA,MAAC2L,EAAAA,GAAI,CAACC,WAAS,EAACnF,WAAW,SAASuB,QAAS,GAAI3I,SAAA,EAC7CqB,EAAAA,EAAAA,KAACiL,EAAAA,GAAI,CAACnI,MAAI,EAACsI,GAAI,GAAGzM,UACdqB,EAAAA,EAAAA,KAACsL,EAAAA,EAAS,CACNnK,WAAS,EACTW,YAAY,WACZV,MAAOlC,EACPmC,SArBPC,IACrB,MAAMiK,EAAWjK,EAAMG,OAAOL,MAC9B8I,EAASqB,GACLA,EAASjB,QAAU,EACnBF,GAAW,GAEXA,GAAW,EACf,EAe4BpL,GAAI,CACA2C,GAAI,EACJ,UAAW,CAAEC,QAAS,cAAe1B,EAAG,EAAG2C,aAAc,OACzD,aAAc,CAAEhB,QAAS,QACzB,4BAA6B,CACzB2J,GAAI,GAER,2BAA4B,CACxB5J,QAAS,gBAGjB6J,QAvCTnK,IACD,UAAdA,EAAMoK,KAAqC,KAAlBpK,EAAMqK,SAC/BtB,GACJ,EAqC4BuB,WAAYzB,EAAU,0BAA4B,GAClD0B,MAAO1B,OAGfnK,EAAAA,EAAAA,KAACiL,EAAAA,GAAI,CAACnI,MAAI,EAAAnE,UACNqB,EAAAA,EAAAA,KAAC8L,EAAAA,EAAM,CAAC1L,QAAQ,OAAOsG,KAAK,QAAQ7B,MAAM,UAAU7F,GAAI,CAAEkB,EAAG,GAAK6L,SAAU,IAAM,aAAW,SAAQpN,UACjGqB,EAAAA,EAAAA,KAACgM,EAAAA,EAAoB,CAACnF,SAAS,eAGvC7G,EAAAA,EAAAA,KAACiL,EAAAA,GAAI,CAACnI,MAAI,EAAAnE,UACNqB,EAAAA,EAAAA,KAAC8L,EAAAA,EAAM,CAAC1L,QAAQ,OAAOsG,KAAK,QAAQ7B,MAAM,UAAU7F,GAAI,CAAEkB,EAAG,GAAK6L,SAAU,IAAM,aAAW,WAAUpN,UACnGqB,EAAAA,EAAAA,KAACiM,EAAAA,EAAwB,CAACpF,SAAS,eAG3C7G,EAAAA,EAAAA,KAACiL,EAAAA,GAAI,CAACnI,MAAI,EAACsI,IAAE,EAACc,cAAY,KAC1BlM,EAAAA,EAAAA,KAACiL,EAAAA,GAAI,CAACnI,MAAI,EAAAnE,UACNW,EAAAA,EAAAA,MAACsG,EAAAA,EAAK,CAACC,UAAU,MAAME,WAAW,SAASuB,QAAS,GAAI3I,SAAA,EACpDqB,EAAAA,EAAAA,KAACwG,EAAAA,EAAU,CAACE,KAAK,QAAQ7B,MAAM,QAAQmB,QAASgE,EAAqB,aAAW,kBAAiBrL,UAC7FqB,EAAAA,EAAAA,KAACmM,EAAAA,EAAS,CAACtF,SAAS,aAExB7G,EAAAA,EAAAA,KAAC8L,EAAAA,EAAM,CAAC1L,QAAQ,YAAYyE,MAAM,UAAUmB,QAASqE,EAAS3D,KAAK,QAAO/H,SAAC,qBASjGmL,IACE9J,EAAAA,EAAAA,KAACiL,EAAAA,GAAI,CAACnI,MAAI,EAACsI,GAAI,GAAGzM,UACdqB,EAAAA,EAAAA,KAAC8L,EAAAA,EAAM,CAAC1L,QAAQ,OAAOyE,MAAM,UAAU7F,GAAI,CAAEiH,MAAO,QAAUD,QAASgE,EAAoBrL,SAAC,iBAKjG,E,2DC3IA,SAASyN,EAAiB3N,GAAgC,IAA/B,MAAES,EAAK,KAAEgF,EAAI,YAAED,GAAaxF,EAClE,OACIuB,EAAAA,EAAAA,KAACqM,EAAAA,EAAM,CACHnI,KAAMA,EACN+C,QAASA,IAAMhD,GAAY,GAC3B8C,aAAW,EACXuF,SAAS,KACT,kBAAgB,sBAChB,mBAAiB,4BAA2B3N,SAE3CuF,IACG5E,EAAAA,EAAAA,MAAA+H,EAAAA,SAAA,CAAA1I,SAAA,EACIW,EAAAA,EAAAA,MAACiN,EAAAA,EAAW,CAAC/K,GAAG,sBAAqB7C,SAAA,CAAEO,EAAM,0CAC7Cc,EAAAA,EAAAA,KAACwM,EAAAA,EAAa,CAAA7N,UACVqB,EAAAA,EAAAA,KAACyM,EAAAA,EAAiB,CAACjL,GAAG,4BAA2B7C,SAAC,6EAItDW,EAAAA,EAAAA,MAACoN,EAAAA,EAAa,CAAC1N,GAAI,CAAE2N,GAAI,GAAIhO,SAAA,EACzBqB,EAAAA,EAAAA,KAAC8L,EAAAA,EAAM,CAAC9F,QAASA,IAAM/B,GAAY,GAAQY,MAAM,QAAOlG,SAAC,YAGzDqB,EAAAA,EAAAA,KAAC8L,EAAAA,EAAM,CAAC1L,QAAQ,YAAYsG,KAAK,QAAQV,QAASA,IAAM/B,GAAY,GAAO2I,WAAS,EAAAjO,SAAC,kBAQ7G,C,0BCZA,MAAMsD,GAAiBA,CAACC,EAAYC,EAAgB/C,EAAOgD,KACvD,MAAMR,EAAiC,SAAvBxC,EAAMM,QAAQC,KAAkBP,EAAMM,QAAQ2C,WAAWK,QAAUtD,EAAMM,QAAQiD,QAAQ9C,MACzG,MAAO,CACHkM,SAAU,IACVvM,OAAQ,YACRC,YAAoC,SAAvBL,EAAMM,QAAQC,KAAkBP,EAAMM,QAAQ2C,WAAWK,QAAUtD,EAAMM,QAAQiD,QAAQ,KAAO,GAC7GC,gBAAiBV,EAAa9C,EAAMM,QAAQI,KAAK,IAAM8B,EACvDiB,aAAcT,EACdG,WAAY,OACZC,OAAS,aACTqK,OAAQ,UACL1K,EACN,EAIC2K,GAAiBA,CAACC,EAAgB3N,EAAOgD,KAC3C,MAAMR,EAAiC,SAAvBxC,EAAMM,QAAQC,KAAkBP,EAAMM,QAAQ2C,WAAWK,QAAUtD,EAAMM,QAAQiD,QAAQ9C,MACnGmN,EAAqC,SAAvB5N,EAAMM,QAAQC,KAAkBP,EAAMM,QAAQuN,KAAKC,SAAW9N,EAAMM,QAAQiD,QAAQ,KAExG,MAAO,CACHN,WAAY0K,EAAiBC,EAAcpL,EAC3Ca,QAAS,gBACTwD,MAAO,OACPpD,aAAcT,EACjB,EAiFL,GA5EgB3D,IAAwB,IAAvB,OAAEkC,EAAM,MAAEoC,GAAOtE,EAC9B,MAAMW,GAAQC,EAAAA,EAAAA,KACRuB,GAAWC,EAAAA,EAAAA,OAEX,aAAEgC,IAAiBK,EAAAA,EAAAA,MACnB,MAAEE,EAAK,QAAEtC,EAAO,aAAEqM,IAAiBpM,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,SAChEmM,EAAczM,EAAOe,QAAQ2L,KAAK5J,GAAWL,EAAME,QAAQR,GAASA,EAAKtB,KAAOiC,IAAQ,MAEvFS,EAAMC,IAAWL,EAAAA,EAAAA,WAAS,GAC3BG,EAAeI,IACjBF,GAAQ,GACJE,IACAzD,GAAS0M,EAAAA,EAAAA,IAAa3M,EAAOa,GAAI2L,EAAcrM,IAC/CF,GACI2D,EAAAA,EAAAA,IAAa,CACTL,MAAM,EACNM,QAAS,8BACTC,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CvE,QAAS,QACTwE,MAAO,CACHC,MAAO,WAEXC,OAAO,KAGnB,EAGEyI,EAAqBA,IAAMpJ,GAAQ,GAEzC,OACInE,EAAAA,EAAAA,KAACoF,EAAAA,GAAS,CAACC,YAAa1E,EAAOa,GAAIuB,MAAOA,EAAMpE,SAC3CA,CAAC2G,EAAUC,KACRvF,EAAAA,EAAAA,KAAA,OACItB,IAAK4G,EAASE,YACVF,EAASG,kBACTH,EAASI,gBACbC,MAAO1D,GAAesD,EAASrD,WAAYoD,EAASG,eAAeE,MAAOvG,EAAQ,GAAEyD,OAAkBlE,UAEtGqB,EAAAA,EAAAA,KAACwN,EAAAA,GAAS,CAACC,YAAa9M,EAAOa,GAAIkM,KAAK,OAAM/O,SACzCA,CAACgP,EAAcC,KACZtO,EAAAA,EAAAA,MAAA,OACIZ,IAAKiP,EAAanI,YACdmI,EAAaE,eACjBlI,MAAOmH,GAAec,EAAab,eAAgB3N,EAAQ,GAAEyD,OAAkBlE,SAAA,EAE/EW,EAAAA,EAAAA,MAAC2L,EAAAA,GAAI,CAACC,WAAS,EAACnF,WAAW,SAASuB,QAASwG,EAAAA,GAAYnP,SAAA,EACrDqB,EAAAA,EAAAA,KAACiL,EAAAA,GAAI,CAACnI,MAAI,EAACsI,IAAE,EAACc,cAAY,EAAAvN,UACtBqB,EAAAA,EAAAA,KAAC+N,EAAU,CAACpN,OAAQA,OAExBrB,EAAAA,EAAAA,MAAC2L,EAAAA,GAAI,CAACnI,MAAI,EAAC9D,GAAI,CAAE2C,GAAI,KAAMhD,SAAA,EACvBqB,EAAAA,EAAAA,KAACwG,EAAAA,EAAU,CAACR,QAASuH,EAAoB7G,KAAK,QAAQ,aAAW,iBAAgB/H,UAC7EqB,EAAAA,EAAAA,KAACgO,EAAAA,EAAiB,CAACnH,SAAS,QAAQ,gBAAc,mBAAmB,gBAAc,WAEtF3C,IAAQlE,EAAAA,EAAAA,KAACoM,EAAiB,CAAClN,MAAOyB,EAAOzB,MAAOgF,KAAMA,EAAMD,YAAaA,UAGjFmJ,EAAYC,KAAI,CAACvK,EAAMmL,KACpBjO,EAAAA,EAAAA,KAACkO,EAAK,CAASpL,KAAMA,EAAMC,MAAOkL,GAAtBA,KAEfN,EAAa7L,aACd9B,EAAAA,EAAAA,KAACmO,EAAO,CAACtE,SAAUlJ,EAAOa,aAMtC,E,gBC1GpB,MAAMmI,GAAS,IAAIC,EAAAA,OA4HnB,GAxHkBwE,KACd,MAAMhP,GAAQC,EAAAA,EAAAA,KACRuB,GAAWC,EAAAA,EAAAA,OAEV3B,EAAOgL,IAAYpG,EAAAA,EAAAA,UAAS,KAC5BqG,EAASC,IAActG,EAAAA,EAAAA,WAAS,IAEhCuK,EAAaC,IAAkBxK,EAAAA,EAAAA,WAAS,IACzC,QAAEhD,EAAO,aAAEqM,IAAiBpM,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,SACzDsN,EAAwBA,KAC1BD,GAAgBrE,IAAUA,GAAK,EAG7BuE,EAAeA,KACjB,GAAItP,EAAMoL,OAAS,EAAG,CAClB,MAAMmE,EAAY,CACdjN,GAAK,GAAEmI,GAAOa,QAAQ,CAAEC,IAAK,IAAMC,IAAK,SACxCxL,QACAwC,QAAS,IAGbd,GAAS8N,EAAAA,EAAAA,IAAUD,EAAW3N,EAASqM,IACvCvM,GACI2D,EAAAA,EAAAA,IAAa,CACTL,MAAM,EACNM,QAAS,0BACTC,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CvE,QAAS,QACTwE,MAAO,CACHC,MAAO,WAEXC,OAAO,KAGfwJ,GAAgBrE,IAAUA,IAC1BC,EAAS,GACb,MACIE,GAAW,EACf,EAmBJ,OACIpK,EAAAA,EAAAA,KAAC2O,GAAAA,EAAQ,CACL3P,GAAI,CACA+M,SAAU,IACVnJ,gBAAwC,SAAvBxD,EAAMM,QAAQC,KAAkBP,EAAMM,QAAQ2C,WAAWK,QAAUtD,EAAMM,QAAQiD,QAAQ9C,MAC1GgN,OAAQ,QAEZ5N,UAAW,CAAEiB,EAAG,IAAK,iBAAkB,CAAE0O,GAAI,MAAQjQ,UAErDW,EAAAA,EAAAA,MAAC2L,EAAAA,GAAI,CAACC,WAAS,EAACnF,WAAW,SAASuB,QAAS,EAAE3I,SAAA,CAC1C0P,IACGrO,EAAAA,EAAAA,KAACiL,EAAAA,GAAI,CAACnI,MAAI,EAACsI,GAAI,GAAGzM,UACdqB,EAAAA,EAAAA,KAACzB,EAAAA,EAAO,CAACU,UAAW,CAAEiB,EAAG,EAAGmL,WAAY,mCAAoC1M,UACxEW,EAAAA,EAAAA,MAAC2L,EAAAA,GAAI,CAACC,WAAS,EAACnF,WAAW,SAASuB,QAAS,GAAI3I,SAAA,EAC7CqB,EAAAA,EAAAA,KAACiL,EAAAA,GAAI,CAACnI,MAAI,EAACsI,GAAI,GAAGzM,UACdqB,EAAAA,EAAAA,KAACsL,EAAAA,EAAS,CACNnK,WAAS,EACTW,YAAY,aACZV,MAAOlC,EACPmC,SA7BTC,IACvB,MAAMiK,EAAWjK,EAAMG,OAAOL,MAC9B8I,EAASqB,GACLA,EAASjB,QAAU,EACnBF,GAAW,GAEXA,GAAW,EACf,EAuBgCpL,GAAI,CACA2C,GAAI,EACJ,UAAW,CAAEC,QAAS,cAAe1B,EAAG,EAAG2C,aAAc,OACzD,aAAc,CAAEhB,QAAS,QACzB,4BAA6B,CACzB2J,GAAI,GAER,2BAA4B,CACxB5J,QAAS,gBAGjB6J,QA/CXnK,IACH,UAAdA,EAAMoK,KAAqC,KAAlBpK,EAAMqK,SAC/B6C,GACJ,EA6CgC5C,WAAYzB,EAAU,4BAA8B,GACpD0B,MAAO1B,OAGfnK,EAAAA,EAAAA,KAACiL,EAAAA,GAAI,CAACnI,MAAI,EAACsI,IAAE,EAACc,cAAY,KAC1BlM,EAAAA,EAAAA,KAACiL,EAAAA,GAAI,CAACnI,MAAI,EAAAnE,UACNW,EAAAA,EAAAA,MAACsG,EAAAA,EAAK,CAACC,UAAU,MAAME,WAAW,SAASuB,QAAS,EAAE3I,SAAA,EAClDqB,EAAAA,EAAAA,KAAC8L,EAAAA,EAAM,CAAC1L,QAAQ,OAAOyE,MAAM,QAAQ7F,GAAI,CAAEiH,MAAO,QAAUD,QAASuI,EAAsB5P,SAAC,YAG5FqB,EAAAA,EAAAA,KAAC8L,EAAAA,EAAM,CAAC1L,QAAQ,YAAYyE,MAAM,UAAUmB,QAASwI,EAAc9H,KAAK,QAAO/H,SAAC,qBAStG0P,IACErO,EAAAA,EAAAA,KAACiL,EAAAA,GAAI,CAACnI,MAAI,EAACsI,GAAI,GAAGzM,UACdqB,EAAAA,EAAAA,KAAC8L,EAAAA,EAAM,CAAC1L,QAAQ,OAAOyE,MAAM,UAAU7F,GAAI,CAAEiH,MAAO,QAAUD,QAASuI,EAAsB5P,SAAC,qBAMnG,E,gBC1HnB,MA2HA,GAlHckQ,KACV,MAAMjO,GAAWC,EAAAA,EAAAA,OAEX,QAAEC,EAAO,aAAEqM,IAAiBpM,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,SAqF/D,OACI3B,EAAAA,EAAAA,MAACwP,EAAAA,EAAG,CAAC9P,GAAI,CAAE6C,QAAS,QAASlD,SAAA,EACzBqB,EAAAA,EAAAA,KAAC+O,EAAAA,GAAe,CAACC,UArFNC,IACf,IAAIR,EACJ,MAAM,OAAES,EAAM,YAAEC,EAAW,YAAE9J,EAAW,KAAEqI,GAASuB,EAEnD,IAAKE,EAAa,OAClB,GAAIA,EAAY1B,cAAgByB,EAAOzB,aAAe0B,EAAYpM,QAAUmM,EAAOnM,MAAO,OAE1F,GAAa,WAAT2K,EAAmB,CACnB,MAAM0B,EAAkBC,MAAMC,KAAKnC,GAMnC,OAJAiC,EAAgBG,OAAOL,EAAOnM,MAAO,GACrCqM,EAAgBG,OAAkB,OAAXJ,QAAW,IAAXA,OAAW,EAAXA,EAAapM,MAAO,EAAGsC,QAE9CzE,GAAS4O,EAAAA,EAAAA,IAAkBJ,GAE/B,CAGA,MAAMK,EAAe3O,EAAQwC,QAAQR,GAASA,EAAKtB,KAAO0N,EAAOzB,cAAa,GAGxEiC,EAAoB5O,EAAQwC,QAAQR,GAASA,EAAKtB,KAAO2N,EAAY1B,cAAa,GAIxF,GAAIgC,IAAiBC,EAAmB,CACpC,MAAMC,EAAaN,MAAMC,KAAKG,EAAa/N,SAG3CiO,EAAWJ,OAAOL,EAAOnM,MAAO,GAGhC4M,EAAWJ,OAAOJ,EAAYpM,MAAO,EAAGsC,GAGxC,MAAMuK,EAAkB,IACjBH,EACH/N,QAASiO,GAGblB,EAAY3N,EAAQuM,KAAK1M,GACjBA,EAAOa,KAAOoO,EAAgBpO,GACvBoO,EAEJjP,GAEf,KAAO,CACH,MAAMkP,EAAmBR,MAAMC,KAAKG,EAAa/N,SAGjDmO,EAAiBN,OAAOL,EAAOnM,MAAO,GAGtC,MAAM6M,EAAkB,IACjBH,EACH/N,QAASmO,GAGPC,EAAwBT,MAAMC,KAAKI,EAAkBhO,SAG3DoO,EAAsBP,OAAOJ,EAAYpM,MAAO,EAAGsC,GAGnD,MAAM0K,EAAuB,IACtBL,EACHhO,QAASoO,GAGbrB,EAAY3N,EAAQuM,KAAK1M,GACjBA,EAAOa,KAAOoO,EAAgBpO,GACvBoO,EAEPjP,EAAOa,KAAOuO,EAAqBvO,GAC5BuO,EAEJpP,GAEf,CAEAC,GAASoP,EAAAA,EAAAA,IAAsBvB,GAAW,EAKA9P,UAClCqB,EAAAA,EAAAA,KAACwN,EAAAA,GAAS,CAACC,YAAY,UAAU5H,UAAU,aAAa6H,KAAK,SAAQ/O,SAChEA,CAAC2G,EAAUC,KACRjG,SAAAA,EAAAA,MAACqP,GAAAA,EAAQ,CACLnP,QAAQ,EACRd,IAAK4G,EAASE,SACdvG,WAzGJ8N,EAyG8BxH,EAASwH,eAzGzB,CAClC7M,EAAG,EACH0B,QAASmL,EAAiB,cAAgB,cAC1ClL,QAAS,OACTuE,SAAU,YAsGkBd,EAASuI,eAAclP,SAAA,CAE1BwO,EAAaE,KAAI,CAACxD,EAAU9G,KACzB,MAAMpC,EAASG,EAAQwC,QAAQR,GAASA,EAAKtB,KAAOqI,IAAU,GAC9D,OAAO7J,EAAAA,EAAAA,KAACiQ,GAAO,CAAgBtP,OAAQA,EAAQoC,MAAOA,GAAjC8G,EAA0C,IAElEvE,EAASxD,aACV9B,EAAAA,EAAAA,KAACoO,GAAS,OAjHdrB,KAmHH,OAGT/M,EAAAA,EAAAA,KAACkQ,GAAAA,EAAW,MACV,C,mCClIVC,EAAyBnO,EAAQ,OAIrCoO,EAAQ,OAAU,EAClB,IAAIC,EAAiBF,EAAuBnO,EAAQ,QAChDsO,EAActO,EAAQ,OACtBuO,GAAW,EAAIF,EAAe3N,SAAS,EAAc,EAAI4N,EAAYE,KAAK,OAAQ,CACpFC,EAAG,iIACF,MAAmB,EAAIH,EAAYE,KAAK,OAAQ,CACjDC,EAAG,kBACHlQ,QAAS,MACR,MAAO,wBACV6P,EAAQ,EAAUG,C,mCCbdJ,EAAyBnO,EAAQ,OAIrCoO,EAAQ,OAAU,EAClB,IAAIC,EAAiBF,EAAuBnO,EAAQ,QAChDsO,EAActO,EAAQ,OACtBuO,GAAW,EAAIF,EAAe3N,SAAS,EAAc,EAAI4N,EAAYE,KAAK,SAAU,CACtFE,GAAI,IACJC,GAAI,IACJC,EAAG,IACHrQ,QAAS,MACR,MAAmB,EAAI+P,EAAYE,KAAK,OAAQ,CACjDC,EAAG,2DACHlQ,QAAS,MACR,MAAmB,EAAI+P,EAAYE,KAAK,OAAQ,CACjDC,EAAG,oZACF,MAAO,oBACVL,EAAQ,EAAUG,C,kBCrBlB,IAAIlD,EAAM,CACT,kBAAmB,MACnB,mBAAoB,MACpB,mBAAoB,MACpB,mBAAoB,MACpB,kBAAmB,MACnB,kBAAmB,MACnB,kBAAmB,MACnB,kBAAmB,MACnB,kBAAmB,KACnB,kBAAmB,MACnB,kBAAmB,MACnB,kBAAmB,KACnB,uBAAwB,MACxB,qBAAsB,MACtB,qBAAsB,MACtB,qBAAsB,MACtB,uBAAwB,MACxB,wBAAyB,MACzB,wBAAyB,MACzB,wBAAyB,MACzB,uBAAwB,MACxB,uBAAwB,MACxB,uBAAwB,MACxB,uBAAwB,MACxB,uBAAwB,MACxB,uBAAwB,MACxB,uBAAwB,MACxB,uBAAwB,OAIzB,SAASwD,EAAeC,GACvB,IAAItP,EAAKuP,EAAsBD,GAC/B,OAAOE,EAAoBxP,EAC5B,CACA,SAASuP,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAE5D,EAAKyD,GAAM,CACpC,IAAII,EAAI,IAAIC,MAAM,uBAAyBL,EAAM,KAEjD,MADAI,EAAEE,KAAO,mBACHF,CACP,CACA,OAAO7D,EAAIyD,EACZ,CACAD,EAAeQ,KAAO,WACrB,OAAOC,OAAOD,KAAKhE,EACpB,EACAwD,EAAeU,QAAUR,EACzBS,EAAOpB,QAAUS,EACjBA,EAAerP,GAAK,K","sources":["ui-component/cards/SubCard.js","views/application/kanban/Board/EditColumn.js","views/application/kanban/Board/Items.js","../node_modules/date-fns/esm/sub/index.js","../node_modules/date-fns/esm/subMonths/index.js","../node_modules/date-fns/esm/subDays/index.js","views/application/kanban/Board/AddItem.js","views/application/kanban/Board/AlertColumnDelete.js","views/application/kanban/Board/Columns.js","views/application/kanban/Board/AddColumn.js","views/application/kanban/Board/index.js","../node_modules/@mui/icons-material/CalendarTodayTwoTone.js","../node_modules/@mui/icons-material/PeopleAltTwoTone.js","assets/images/profile|sync|/^/.//.*$"],"sourcesContent":["import PropTypes from 'prop-types';\n\nimport React from 'react';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@mui/material';\n\n// ==============================|| CUSTOM SUB CARD ||============================== //\n\nconst SubCard = React.forwardRef(\n    ({ children, content, contentClass, darkTitle, secondary, sx = {}, contentSX = {}, title, ...others }, ref) => {\n        const theme = useTheme();\n\n        return (\n            <Card\n                ref={ref}\n                sx={{\n                    border: '1px solid',\n                    borderColor: theme.palette.mode === 'dark' ? theme.palette.dark.light + 15 : theme.palette.grey[200],\n                    ':hover': {\n                        boxShadow: theme.palette.mode === 'dark' ? '0 2px 14px 0 rgb(33 150 243 / 10%)' : '0 2px 14px 0 rgb(32 40 45 / 8%)'\n                    },\n                    ...sx\n                }}\n                {...others}\n            >\n                {/* card header and action */}\n                {!darkTitle && title && (\n                    <CardHeader sx={{ p: 2.5 }} title={<Typography variant=\"h5\">{title}</Typography>} action={secondary} />\n                )}\n                {darkTitle && title && (\n                    <CardHeader sx={{ p: 2.5 }} title={<Typography variant=\"h4\">{title}</Typography>} action={secondary} />\n                )}\n\n                {/* content & header divider */}\n                {title && (\n                    <Divider\n                        sx={{\n                            opacity: 1,\n                            borderColor: theme.palette.mode === 'dark' ? theme.palette.dark.light + 15 : theme.palette.grey[200]\n                        }}\n                    />\n                )}\n\n                {/* card content */}\n                {content && (\n                    <CardContent sx={{ p: 2.5, ...contentSX }} className={contentClass || ''}>\n                        {children}\n                    </CardContent>\n                )}\n                {!content && children}\n            </Card>\n        );\n    }\n);\n\nSubCard.propTypes = {\n    children: PropTypes.node,\n    content: PropTypes.bool,\n    contentClass: PropTypes.string,\n    darkTitle: PropTypes.bool,\n    secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\n    sx: PropTypes.object,\n    contentSX: PropTypes.object,\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\n};\n\nSubCard.defaultProps = {\n    content: true\n};\n\nexport default SubCard;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { OutlinedInput } from '@mui/material';\n\n// project imports\nimport { useDispatch, useSelector } from 'store';\nimport { editColumn } from 'store/slices/kanban';\n\n// ==============================|| KANBAN BOARD - COLUMN EDIT ||============================== //\n\nconst EditColumn = ({ column }) => {\n    const theme = useTheme();\n    const dispatch = useDispatch();\n\n    const { columns } = useSelector((state) => state.kanban);\n\n    const handleColumnRename = (event) => {\n        dispatch(\n            editColumn(\n                {\n                    id: column.id,\n                    title: event.target.value,\n                    itemIds: column.itemIds\n                },\n                columns\n            )\n        );\n    };\n\n    return (\n        <OutlinedInput\n            fullWidth\n            value={column.title}\n            onChange={handleColumnRename}\n            sx={{\n                mb: 1.5,\n                '& input:focus': {\n                    bgcolor: theme.palette.mode === 'dark' ? theme.palette.dark[800] : theme.palette.grey[50]\n                },\n                '& input:hover': {\n                    bgcolor: theme.palette.mode === 'dark' ? theme.palette.dark[800] : theme.palette.grey[50]\n                },\n                '& input:hover + fieldset': {\n                    display: 'block'\n                },\n                '&, & input': { bgcolor: 'transparent' },\n                '& fieldset': { display: 'none' },\n                '& input:focus + fieldset': { display: 'block' }\n            }}\n            placeholder=\"title\"\n        />\n    );\n};\n\nEditColumn.propTypes = {\n    column: PropTypes.object\n};\n\nexport default EditColumn;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { ButtonBase, CardMedia, IconButton, Link, Menu, MenuItem, Stack, Tooltip, Typography } from '@mui/material';\n\n// third-party\nimport { Draggable } from '@hello-pangea/dnd';\n\n// project imports\nimport useConfig from 'hooks/useConfig';\nimport EditStory from '../Backlogs/EditStory';\nimport AlertItemDelete from './AlertItemDelete';\nimport { openSnackbar } from 'store/slices/snackbar';\nimport { useDispatch, useSelector } from 'store';\nimport { selectItem, deleteItem } from 'store/slices/kanban';\n\n// assets\nimport MoreVertTwoToneIcon from '@mui/icons-material/MoreVertTwoTone';\nimport MenuBookTwoToneIcon from '@mui/icons-material/MenuBookTwoTone';\n\nconst backImage = require.context('assets/images/profile', true);\n\n// item drag wrapper\nconst getDragWrapper = (isDragging, draggableStyle, theme, radius) => {\n    const bgcolor = theme.palette.mode === 'dark' ? theme.palette.background.paper + 90 : theme.palette.grey[50];\n    return {\n        userSelect: 'none',\n        margin: `0 0 ${8}px 0`,\n        padding: 16,\n        border: '1px solid',\n        borderColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary[200] + 75,\n        backgroundColor: isDragging ? bgcolor : theme.palette.background.paper,\n        borderRadius: radius,\n        ...draggableStyle\n    };\n};\n\n// ==============================|| KANBAN BOARD - ITEMS ||============================== //\n\nconst Items = ({ item, index }) => {\n    const theme = useTheme();\n    const dispatch = useDispatch();\n    const backProfile = item.image && backImage(`./${item.image}`);\n\n    const { borderRadius } = useConfig();\n    const kanban = useSelector((state) => state.kanban);\n    const { userStory, items, columns } = kanban;\n\n    const itemStory = userStory.filter((story) => story?.itemIds?.filter((itemId) => itemId === item.id)[0])[0];\n\n    const handlerDetails = (id) => {\n        dispatch(selectItem(id));\n    };\n\n    const [anchorEl, setAnchorEl] = useState(null);\n    const handleClick = (event) => {\n        setAnchorEl(event?.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const [open, setOpen] = useState(false);\n    const handleModalClose = (status) => {\n        setOpen(false);\n        if (status) {\n            dispatch(deleteItem(item.id, items, columns, userStory));\n            dispatch(\n                openSnackbar({\n                    open: true,\n                    message: 'Task Deleted successfully',\n                    anchorOrigin: { vertical: 'top', horizontal: 'right' },\n                    variant: 'alert',\n                    alert: {\n                        color: 'success'\n                    },\n                    close: false\n                })\n            );\n        }\n    };\n\n    const [openStoryDrawer, setOpenStoryDrawer] = useState(false);\n    const handleStoryDrawerOpen = () => {\n        setOpenStoryDrawer((prevState) => !prevState);\n    };\n\n    const editStory = () => {\n        setOpenStoryDrawer((prevState) => !prevState);\n    };\n\n    return (\n        <Draggable key={item.id} draggableId={item.id} index={index}>\n            {(provided, snapshot) => (\n                <div\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    style={getDragWrapper(snapshot.isDragging, provided.draggableProps.style, theme, `${borderRadius}px`)}\n                >\n                    <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" sx={{ mb: itemStory ? -0.75 : 0 }}>\n                        <Typography\n                            onClick={() => handlerDetails(item.id)}\n                            variant=\"subtitle1\"\n                            sx={{\n                                display: 'inline-block',\n                                width: 'calc(100% - 34px)',\n                                textOverflow: 'ellipsis',\n                                whiteSpace: 'nowrap',\n                                overflow: 'hidden',\n                                verticalAlign: 'middle',\n                                cursor: 'pointer'\n                            }}\n                        >\n                            {item.title}\n                        </Typography>\n\n                        <ButtonBase sx={{ borderRadius: '12px' }} onClick={handleClick} aria-controls=\"menu-comment\" aria-haspopup=\"true\">\n                            <IconButton component=\"span\" size=\"small\" disableRipple aria-label=\"more options\">\n                                <MoreVertTwoToneIcon fontSize=\"inherit\" />\n                            </IconButton>\n                        </ButtonBase>\n                        <Menu\n                            id=\"menu-comment\"\n                            anchorEl={anchorEl}\n                            keepMounted\n                            open={Boolean(anchorEl)}\n                            onClose={handleClose}\n                            variant=\"selectedMenu\"\n                            anchorOrigin={{\n                                vertical: 'bottom',\n                                horizontal: 'right'\n                            }}\n                            transformOrigin={{\n                                vertical: 'top',\n                                horizontal: 'right'\n                            }}\n                        >\n                            <MenuItem\n                                onClick={() => {\n                                    handleClose();\n                                    handlerDetails(item.id);\n                                }}\n                            >\n                                Edit\n                            </MenuItem>\n                            <MenuItem\n                                onClick={() => {\n                                    handleClose();\n                                    setOpen(true);\n                                }}\n                            >\n                                Delete\n                            </MenuItem>\n                        </Menu>\n                        {open && <AlertItemDelete title={item.title} open={open} handleClose={handleModalClose} />}\n                    </Stack>\n                    {itemStory && (\n                        <>\n                            <Stack direction=\"row\" spacing={0.5} alignItems=\"center\">\n                                <Tooltip title=\"User Story\">\n                                    <MenuBookTwoToneIcon color=\"secondary\" sx={{ fontSize: '0.875rem' }} />\n                                </Tooltip>\n                                <Tooltip title={itemStory.title}>\n                                    <Link\n                                        variant=\"caption\"\n                                        color=\"secondary\"\n                                        underline=\"hover\"\n                                        onClick={editStory}\n                                        sx={{ cursor: 'pointer', pt: 0.5 }}\n                                    >\n                                        User Story #{itemStory.id}\n                                    </Link>\n                                </Tooltip>\n                            </Stack>\n                            {openStoryDrawer && (\n                                <EditStory story={itemStory} open={openStoryDrawer} handleDrawerOpen={handleStoryDrawerOpen} />\n                            )}\n                        </>\n                    )}\n                    {backProfile && (\n                        <CardMedia\n                            component=\"img\"\n                            image={backProfile}\n                            sx={{ width: '100%', borderRadius: 1, mt: 1.5 }}\n                            title=\"Slider5 image\"\n                        />\n                    )}\n                </div>\n            )}\n        </Draggable>\n    );\n};\n\nItems.propTypes = {\n    index: PropTypes.number,\n    item: PropTypes.object\n};\n\nexport default Items;\n","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport subDays from \"../subDays/index.js\";\nimport subMonths from \"../subMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name sub\n * @category Common Helpers\n * @summary Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @description\n * Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be subtracted\n *\n * | Key     | Description                        |\n * |---------|------------------------------------|\n * | years   | Amount of years to be subtracted   |\n * | months  | Amount of months to be subtracted  |\n * | weeks   | Amount of weeks to be subtracted   |\n * | days    | Amount of days to be subtracted    |\n * | hours   | Amount of hours to be subtracted   |\n * | minutes | Amount of minutes to be subtracted |\n * | seconds | Amount of seconds to be subtracted |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract the following duration from 15 June 2017 15:29:20\n * const result = sub(new Date(2017, 5, 15, 15, 29, 20), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30\n * })\n * //=> Mon Sep 1 2014 10:19:50\n */\nexport default function sub(date, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || _typeof(duration) !== 'object') return new Date(NaN);\n  var years = duration.years ? toInteger(duration.years) : 0;\n  var months = duration.months ? toInteger(duration.months) : 0;\n  var weeks = duration.weeks ? toInteger(duration.weeks) : 0;\n  var days = duration.days ? toInteger(duration.days) : 0;\n  var hours = duration.hours ? toInteger(duration.hours) : 0;\n  var minutes = duration.minutes ? toInteger(duration.minutes) : 0;\n  var seconds = duration.seconds ? toInteger(duration.seconds) : 0;\n\n  // Subtract years and months\n  var dateWithoutMonths = subMonths(date, months + years * 12);\n\n  // Subtract weeks and days\n  var dateWithoutDays = subDays(dateWithoutMonths, days + weeks * 7);\n\n  // Subtract hours, minutes and seconds\n  var minutestoSub = minutes + hours * 60;\n  var secondstoSub = seconds + minutestoSub * 60;\n  var mstoSub = secondstoSub * 1000;\n  var finalDate = new Date(dateWithoutDays.getTime() - mstoSub);\n  return finalDate;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * const result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport default function subMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, -amount);\n}","import addDays from \"../addDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name subDays\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @description\n * Subtract the specified number of days from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the days subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * const result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\nexport default function subDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addDays(dirtyDate, -amount);\n}","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\n// material-ui\nimport { Button, Grid, IconButton, TextField, Stack } from '@mui/material';\n\n// third-party\nimport { sub } from 'date-fns';\nimport { Chance } from 'chance';\n\n// project imports\nimport { openSnackbar } from 'store/slices/snackbar';\nimport SubCard from 'ui-component/cards/SubCard';\nimport { useDispatch, useSelector } from 'store';\nimport { addItem } from 'store/slices/kanban';\n\n// assets\nimport CalendarTodayTwoToneIcon from '@mui/icons-material/CalendarTodayTwoTone';\nimport PeopleAltTwoToneIcon from '@mui/icons-material/PeopleAltTwoTone';\nimport CloseIcon from '@mui/icons-material/Close';\n\nconst chance = new Chance();\n\n// ==============================|| KANBAN BOARD - ADD ITEM ||============================== //\n\nconst AddItem = ({ columnId }) => {\n    const dispatch = useDispatch();\n\n    const [addTaskBox, setAddTaskBox] = useState(false);\n    const { columns, items, userStory } = useSelector((state) => state.kanban);\n    const handleAddTaskChange = () => {\n        setAddTaskBox((prev) => !prev);\n    };\n\n    const [title, setTitle] = useState('');\n    const [isTitle, setIsTitle] = useState(false);\n\n    const addTask = () => {\n        if (title.length > 0) {\n            const newItem = {\n                id: `${chance.integer({ min: 1000, max: 9999 })}`,\n                title,\n                dueDate: sub(new Date(), { days: 0, hours: 1, minutes: 45 }),\n                image: false,\n                assign: '',\n                description: '',\n                priority: 'low',\n                attachments: []\n            };\n\n            dispatch(addItem(columnId, columns, newItem, items, '0', userStory));\n            dispatch(\n                openSnackbar({\n                    open: true,\n                    message: 'Task Add successfully',\n                    anchorOrigin: { vertical: 'top', horizontal: 'right' },\n                    variant: 'alert',\n                    alert: {\n                        color: 'success'\n                    },\n                    close: false\n                })\n            );\n            handleAddTaskChange();\n            setTitle('');\n        } else {\n            setIsTitle(true);\n        }\n    };\n\n    const handleAddTask = (event) => {\n        if (event.key === 'Enter' || event.keyCode === 13) {\n            addTask();\n        }\n    };\n\n    const handleTaskTitle = (event) => {\n        const newTitle = event.target.value;\n        setTitle(newTitle);\n        if (newTitle.length <= 0) {\n            setIsTitle(true);\n        } else {\n            setIsTitle(false);\n        }\n    };\n\n    return (\n        <Grid container alignItems=\"center\" spacing={1} sx={{ marginTop: 1 }}>\n            {addTaskBox && (\n                <Grid item xs={12}>\n                    <SubCard contentSX={{ p: 2, transition: 'background-color 0.25s ease-out' }}>\n                        <Grid container alignItems=\"center\" spacing={0.5}>\n                            <Grid item xs={12}>\n                                <TextField\n                                    fullWidth\n                                    placeholder=\"Add Task\"\n                                    value={title}\n                                    onChange={handleTaskTitle}\n                                    sx={{\n                                        mb: 2,\n                                        '& input': { bgcolor: 'transparent', p: 0, borderRadius: '0px' },\n                                        '& fieldset': { display: 'none' },\n                                        '& .MuiFormHelperText-root': {\n                                            ml: 0\n                                        },\n                                        '& .MuiOutlinedInput-root': {\n                                            bgcolor: 'transparent'\n                                        }\n                                    }}\n                                    onKeyUp={handleAddTask}\n                                    helperText={isTitle ? 'Task title is required.' : ''}\n                                    error={isTitle}\n                                />\n                            </Grid>\n                            <Grid item>\n                                <Button variant=\"text\" size=\"small\" color=\"primary\" sx={{ p: 0.5, minWidth: 32 }} aria-label=\"people\">\n                                    <PeopleAltTwoToneIcon fontSize=\"small\" />\n                                </Button>\n                            </Grid>\n                            <Grid item>\n                                <Button variant=\"text\" size=\"small\" color=\"primary\" sx={{ p: 0.5, minWidth: 32 }} aria-label=\"calendar\">\n                                    <CalendarTodayTwoToneIcon fontSize=\"small\" />\n                                </Button>\n                            </Grid>\n                            <Grid item xs zeroMinWidth />\n                            <Grid item>\n                                <Stack direction=\"row\" alignItems=\"center\" spacing={0.5}>\n                                    <IconButton size=\"small\" color=\"error\" onClick={handleAddTaskChange} aria-label=\"cancel add task\">\n                                        <CloseIcon fontSize=\"small\" />\n                                    </IconButton>\n                                    <Button variant=\"contained\" color=\"primary\" onClick={addTask} size=\"small\">\n                                        Add\n                                    </Button>\n                                </Stack>\n                            </Grid>\n                        </Grid>\n                    </SubCard>\n                </Grid>\n            )}\n            {!addTaskBox && (\n                <Grid item xs={12}>\n                    <Button variant=\"text\" color=\"primary\" sx={{ width: '100%' }} onClick={handleAddTaskChange}>\n                        Add Task\n                    </Button>\n                </Grid>\n            )}\n        </Grid>\n    );\n};\n\nAddItem.propTypes = {\n    columnId: PropTypes.string\n};\n\nexport default AddItem;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\n\n// ==============================|| KANBAN BOARD - COLUMN DELETE ||============================== //\n\nexport default function AlertColumnDelete({ title, open, handleClose }) {\n    return (\n        <Dialog\n            open={open}\n            onClose={() => handleClose(false)}\n            keepMounted\n            maxWidth=\"xs\"\n            aria-labelledby=\"column-delete-title\"\n            aria-describedby=\"column-delete-description\"\n        >\n            {open && (\n                <>\n                    <DialogTitle id=\"column-delete-title\">{title} - Are you sure you want to delete?</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id=\"column-delete-description\">\n                            By deleting column, all task inside that column will also be deleted.\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions sx={{ mr: 2 }}>\n                        <Button onClick={() => handleClose(false)} color=\"error\">\n                            Cancel\n                        </Button>\n                        <Button variant=\"contained\" size=\"small\" onClick={() => handleClose(true)} autoFocus>\n                            Delete\n                        </Button>\n                    </DialogActions>\n                </>\n            )}\n        </Dialog>\n    );\n}\n\nAlertColumnDelete.propTypes = {\n    open: PropTypes.bool,\n    handleClose: PropTypes.func,\n    title: PropTypes.string\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Grid, IconButton } from '@mui/material';\n\n// third-party\nimport { Droppable, Draggable } from '@hello-pangea/dnd';\n\n// project imports\nimport useConfig from 'hooks/useConfig';\nimport EditColumn from './EditColumn';\nimport Items from './Items';\nimport AddItem from './AddItem';\nimport AlertColumnDelete from './AlertColumnDelete';\nimport { gridSpacing } from 'store/constant';\nimport { openSnackbar } from 'store/slices/snackbar';\nimport { useDispatch, useSelector } from 'store';\nimport { deleteColumn } from 'store/slices/kanban';\n\n// assets\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\n\n// column drag wrapper\nconst getDragWrapper = (isDragging, draggableStyle, theme, radius) => {\n    const bgcolor = theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary.light;\n    return {\n        minWidth: 250,\n        border: '1px solid',\n        borderColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary[200] + 75,\n        backgroundColor: isDragging ? theme.palette.grey[50] : bgcolor,\n        borderRadius: radius,\n        userSelect: 'none',\n        margin: `0 ${16}px 0 0`,\n        height: '100%',\n        ...draggableStyle\n    };\n};\n\n// column drop wrapper\nconst getDropWrapper = (isDraggingOver, theme, radius) => {\n    const bgcolor = theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary.light;\n    const bgcolorDrop = theme.palette.mode === 'dark' ? theme.palette.text.disabled : theme.palette.primary[200];\n\n    return {\n        background: isDraggingOver ? bgcolorDrop : bgcolor,\n        padding: '8px 16px 14px',\n        width: 'auto',\n        borderRadius: radius\n    };\n};\n\n// ==============================|| KANBAN BOARD - COLUMN ||============================== //\n\nconst Columns = ({ column, index }) => {\n    const theme = useTheme();\n    const dispatch = useDispatch();\n\n    const { borderRadius } = useConfig();\n    const { items, columns, columnsOrder } = useSelector((state) => state.kanban);\n    const columnItems = column.itemIds.map((itemId) => items.filter((item) => item.id === itemId)[0]);\n\n    const [open, setOpen] = useState(false);\n    const handleClose = (status) => {\n        setOpen(false);\n        if (status) {\n            dispatch(deleteColumn(column.id, columnsOrder, columns));\n            dispatch(\n                openSnackbar({\n                    open: true,\n                    message: 'Column deleted successfully',\n                    anchorOrigin: { vertical: 'top', horizontal: 'right' },\n                    variant: 'alert',\n                    alert: {\n                        color: 'success'\n                    },\n                    close: false\n                })\n            );\n        }\n    };\n\n    const handleColumnDelete = () => setOpen(true);\n\n    return (\n        <Draggable draggableId={column.id} index={index}>\n            {(provided, snapshot) => (\n                <div\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    style={getDragWrapper(snapshot.isDragging, provided.draggableProps.style, theme, `${borderRadius}px`)}\n                >\n                    <Droppable droppableId={column.id} type=\"item\">\n                        {(providedDrop, snapshotDrop) => (\n                            <div\n                                ref={providedDrop.innerRef}\n                                {...providedDrop.droppableProps}\n                                style={getDropWrapper(snapshotDrop.isDraggingOver, theme, `${borderRadius}px`)}\n                            >\n                                <Grid container alignItems=\"center\" spacing={gridSpacing}>\n                                    <Grid item xs zeroMinWidth>\n                                        <EditColumn column={column} />\n                                    </Grid>\n                                    <Grid item sx={{ mb: 1.5 }}>\n                                        <IconButton onClick={handleColumnDelete} size=\"large\" aria-label=\"Delete Columns\">\n                                            <DeleteTwoToneIcon fontSize=\"small\" aria-controls=\"menu-simple-card\" aria-haspopup=\"true\" />\n                                        </IconButton>\n                                        {open && <AlertColumnDelete title={column.title} open={open} handleClose={handleClose} />}\n                                    </Grid>\n                                </Grid>\n                                {columnItems.map((item, i) => (\n                                    <Items key={i} item={item} index={i} />\n                                ))}\n                                {providedDrop.placeholder}\n                                <AddItem columnId={column.id} />\n                            </div>\n                        )}\n                    </Droppable>\n                </div>\n            )}\n        </Draggable>\n    );\n};\n\nColumns.propTypes = {\n    column: PropTypes.object,\n    index: PropTypes.number\n};\n\nexport default Columns;\n","import { useState } from 'react';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Button, Grid, TextField, Stack } from '@mui/material';\n\n// third-party\nimport { Chance } from 'chance';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport SubCard from 'ui-component/cards/SubCard';\nimport { openSnackbar } from 'store/slices/snackbar';\nimport { useDispatch, useSelector } from 'store';\nimport { addColumn } from 'store/slices/kanban';\n\nconst chance = new Chance();\n\n// ==============================|| KANBAN BOARD - ADD COLUMN ||============================== //\n\nconst AddColumn = () => {\n    const theme = useTheme();\n    const dispatch = useDispatch();\n\n    const [title, setTitle] = useState('');\n    const [isTitle, setIsTitle] = useState(false);\n\n    const [isAddColumn, setIsAddColumn] = useState(false);\n    const { columns, columnsOrder } = useSelector((state) => state.kanban);\n    const handleAddColumnChange = () => {\n        setIsAddColumn((prev) => !prev);\n    };\n\n    const addNewColumn = () => {\n        if (title.length > 0) {\n            const newColumn = {\n                id: `${chance.integer({ min: 1000, max: 9999 })}`,\n                title,\n                itemIds: []\n            };\n\n            dispatch(addColumn(newColumn, columns, columnsOrder));\n            dispatch(\n                openSnackbar({\n                    open: true,\n                    message: 'Column Add successfully',\n                    anchorOrigin: { vertical: 'top', horizontal: 'right' },\n                    variant: 'alert',\n                    alert: {\n                        color: 'success'\n                    },\n                    close: false\n                })\n            );\n            setIsAddColumn((prev) => !prev);\n            setTitle('');\n        } else {\n            setIsTitle(true);\n        }\n    };\n\n    const handleAddColumn = (event) => {\n        if (event.key === 'Enter' || event.keyCode === 13) {\n            addNewColumn();\n        }\n    };\n\n    const handleColumnTitle = (event) => {\n        const newTitle = event.target.value;\n        setTitle(newTitle);\n        if (newTitle.length <= 0) {\n            setIsTitle(true);\n        } else {\n            setIsTitle(false);\n        }\n    };\n\n    return (\n        <MainCard\n            sx={{\n                minWidth: 250,\n                backgroundColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary.light,\n                height: '100%'\n            }}\n            contentSX={{ p: 1.5, '&:last-of-type': { pb: 1.5 } }}\n        >\n            <Grid container alignItems=\"center\" spacing={1}>\n                {isAddColumn && (\n                    <Grid item xs={12}>\n                        <SubCard contentSX={{ p: 2, transition: 'background-color 0.25s ease-out' }}>\n                            <Grid container alignItems=\"center\" spacing={0.5}>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        fullWidth\n                                        placeholder=\"Add Column\"\n                                        value={title}\n                                        onChange={handleColumnTitle}\n                                        sx={{\n                                            mb: 2,\n                                            '& input': { bgcolor: 'transparent', p: 0, borderRadius: '0px' },\n                                            '& fieldset': { display: 'none' },\n                                            '& .MuiFormHelperText-root': {\n                                                ml: 0\n                                            },\n                                            '& .MuiOutlinedInput-root': {\n                                                bgcolor: 'transparent'\n                                            }\n                                        }}\n                                        onKeyUp={handleAddColumn}\n                                        helperText={isTitle ? 'Column title is required.' : ''}\n                                        error={isTitle}\n                                    />\n                                </Grid>\n                                <Grid item xs zeroMinWidth />\n                                <Grid item>\n                                    <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n                                        <Button variant=\"text\" color=\"error\" sx={{ width: '100%' }} onClick={handleAddColumnChange}>\n                                            Cancel\n                                        </Button>\n                                        <Button variant=\"contained\" color=\"primary\" onClick={addNewColumn} size=\"small\">\n                                            Add\n                                        </Button>\n                                    </Stack>\n                                </Grid>\n                            </Grid>\n                        </SubCard>\n                    </Grid>\n                )}\n                {!isAddColumn && (\n                    <Grid item xs={12}>\n                        <Button variant=\"text\" color=\"primary\" sx={{ width: '100%' }} onClick={handleAddColumnChange}>\n                            Add Column\n                        </Button>\n                    </Grid>\n                )}\n            </Grid>\n        </MainCard>\n    );\n};\n\nexport default AddColumn;\n","// material-ui\nimport { Box } from '@mui/material';\n\n// third-party\nimport { DragDropContext, Droppable } from '@hello-pangea/dnd';\n\n// project imports\nimport Columns from './Columns';\nimport AddColumn from './AddColumn';\nimport ItemDetails from './ItemDetails';\nimport MainCard from 'ui-component/cards/MainCard';\nimport { useDispatch, useSelector } from 'store';\nimport { updateColumnOrder, updateColumnItemOrder } from 'store/slices/kanban';\n\nconst getDragWrapper = (isDraggingOver) => ({\n    p: 1,\n    bgcolor: isDraggingOver ? 'primary.200' : 'transparent',\n    display: 'flex',\n    overflow: 'auto'\n});\n\n// ==============================|| KANBAN - BOARD ||============================== //\n\nconst Board = () => {\n    const dispatch = useDispatch();\n\n    const { columns, columnsOrder } = useSelector((state) => state.kanban);\n    // handle drag & drop\n    const onDragEnd = (result) => {\n        let newColumn;\n        const { source, destination, draggableId, type } = result;\n\n        if (!destination) return;\n        if (destination.droppableId === source.droppableId && destination.index === source.index) return;\n\n        if (type === 'column') {\n            const newColumnsOrder = Array.from(columnsOrder);\n\n            newColumnsOrder.splice(source.index, 1); // remove dragged column\n            newColumnsOrder.splice(destination?.index, 0, draggableId); // set column new position\n\n            dispatch(updateColumnOrder(newColumnsOrder));\n            return;\n        }\n\n        // find dragged item's column\n        const sourceColumn = columns.filter((item) => item.id === source.droppableId)[0];\n\n        // find dropped item's column\n        const destinationColumn = columns.filter((item) => item.id === destination.droppableId)[0];\n\n        // if - moving items in the same list\n        // else - moving items from one list to another\n        if (sourceColumn === destinationColumn) {\n            const newItemIds = Array.from(sourceColumn.itemIds);\n\n            // remove the id of dragged item from its original position\n            newItemIds.splice(source.index, 1);\n\n            // insert the id of dragged item to the new position\n            newItemIds.splice(destination.index, 0, draggableId);\n\n            // updated column\n            const newSourceColumn = {\n                ...sourceColumn,\n                itemIds: newItemIds\n            };\n\n            newColumn = columns.map((column) => {\n                if (column.id === newSourceColumn.id) {\n                    return newSourceColumn;\n                }\n                return column;\n            });\n        } else {\n            const newSourceItemIds = Array.from(sourceColumn.itemIds);\n\n            // remove the id of dragged item from its original column\n            newSourceItemIds.splice(source.index, 1);\n\n            // updated dragged items's column\n            const newSourceColumn = {\n                ...sourceColumn,\n                itemIds: newSourceItemIds\n            };\n\n            const newDestinationItemIds = Array.from(destinationColumn.itemIds);\n\n            // insert the id of dragged item to the new position in dropped column\n            newDestinationItemIds.splice(destination.index, 0, draggableId);\n\n            // updated dropped item's column\n            const newDestinationColumn = {\n                ...destinationColumn,\n                itemIds: newDestinationItemIds\n            };\n\n            newColumn = columns.map((column) => {\n                if (column.id === newSourceColumn.id) {\n                    return newSourceColumn;\n                }\n                if (column.id === newDestinationColumn.id) {\n                    return newDestinationColumn;\n                }\n                return column;\n            });\n        }\n\n        dispatch(updateColumnItemOrder(newColumn));\n    };\n\n    return (\n        <Box sx={{ display: 'flex' }}>\n            <DragDropContext onDragEnd={onDragEnd}>\n                <Droppable droppableId=\"columns\" direction=\"horizontal\" type=\"column\">\n                    {(provided, snapshot) => (\n                        <MainCard\n                            border={false}\n                            ref={provided.innerRef}\n                            contentSX={getDragWrapper(snapshot.isDraggingOver)}\n                            {...provided.droppableProps}\n                        >\n                            {columnsOrder.map((columnId, index) => {\n                                const column = columns.filter((item) => item.id === columnId)[0];\n                                return <Columns key={columnId} column={column} index={index} />;\n                            })}\n                            {provided.placeholder}\n                            <AddColumn />\n                        </MainCard>\n                    )}\n                </Droppable>\n            </DragDropContext>\n            <ItemDetails />\n        </Box>\n    );\n};\n\nexport default Board;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 3h-1V1h-2v2H7V1H5v2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 2v3H4V5h16zM4 21V10h16v11H4z\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M4 5.01h16V8H4z\",\n  opacity: \".3\"\n}, \"1\")], 'CalendarTodayTwoTone');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"9\",\n  cy: \"8\",\n  r: \"2\",\n  opacity: \".3\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 15c-2.7 0-5.8 1.29-6 2.01V18h12v-1c-.2-.71-3.3-2-6-2z\",\n  opacity: \".3\"\n}, \"1\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.67 13.13C18.04 14.06 19 15.32 19 17v3h4v-3c0-2.18-3.57-3.47-6.33-3.87zM15 12c2.21 0 4-1.79 4-4s-1.79-4-4-4c-.47 0-.91.1-1.33.24C14.5 5.27 15 6.58 15 8s-.5 2.73-1.33 3.76c.42.14.86.24 1.33.24zm-6 0c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0-6c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2zm0 7c-2.67 0-8 1.34-8 4v3h16v-3c0-2.66-5.33-4-8-4zm6 5H3v-.99C3.2 16.29 6.3 15 9 15s5.8 1.29 6 2v1z\"\n}, \"2\")], 'PeopleAltTwoTone');\nexports.default = _default;","var map = {\n\t\"./img-gal-1.png\": 61525,\n\t\"./img-gal-10.png\": 36817,\n\t\"./img-gal-11.png\": 88424,\n\t\"./img-gal-12.png\": 66755,\n\t\"./img-gal-2.png\": 94174,\n\t\"./img-gal-3.png\": 34868,\n\t\"./img-gal-4.png\": 20968,\n\t\"./img-gal-5.png\": 35185,\n\t\"./img-gal-6.png\": 5018,\n\t\"./img-gal-7.png\": 22595,\n\t\"./img-gal-8.png\": 64932,\n\t\"./img-gal-9.png\": 4877,\n\t\"./img-profile-bg.png\": 39754,\n\t\"./img-profile1.png\": 94087,\n\t\"./img-profile2.jpg\": 95336,\n\t\"./img-profile3.jpg\": 22949,\n\t\"./profile-back-1.png\": 25534,\n\t\"./profile-back-10.png\": 37564,\n\t\"./profile-back-11.png\": 55077,\n\t\"./profile-back-12.png\": 36302,\n\t\"./profile-back-2.png\": 11285,\n\t\"./profile-back-3.png\": 28396,\n\t\"./profile-back-4.png\": 58563,\n\t\"./profile-back-5.png\": 36986,\n\t\"./profile-back-6.png\": 61649,\n\t\"./profile-back-7.png\": 21704,\n\t\"./profile-back-8.png\": 28255,\n\t\"./profile-back-9.png\": 50166\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 43229;"],"names":["SubCard","React","_ref","ref","children","content","contentClass","darkTitle","secondary","sx","contentSX","title","others","theme","useTheme","_jsxs","Card","border","borderColor","palette","mode","dark","light","grey","boxShadow","_jsx","CardHeader","p","Typography","variant","action","Divider","opacity","CardContent","className","defaultProps","column","dispatch","useDispatch","columns","useSelector","state","kanban","OutlinedInput","fullWidth","value","onChange","event","editColumn","id","target","itemIds","mb","bgcolor","display","placeholder","backImage","require","getDragWrapper","isDragging","draggableStyle","radius","background","paper","userSelect","margin","padding","default","primary","backgroundColor","borderRadius","item","index","backProfile","image","useConfig","userStory","items","itemStory","filter","story","_story$itemIds","itemId","handlerDetails","selectItem","anchorEl","setAnchorEl","useState","handleClick","currentTarget","handleClose","open","setOpen","handleModalClose","status","deleteItem","openSnackbar","message","anchorOrigin","vertical","horizontal","alert","color","close","openStoryDrawer","setOpenStoryDrawer","handleStoryDrawerOpen","prevState","editStory","Draggable","draggableId","provided","snapshot","innerRef","draggableProps","dragHandleProps","style","Stack","direction","justifyContent","alignItems","onClick","width","textOverflow","whiteSpace","overflow","verticalAlign","cursor","ButtonBase","IconButton","component","size","disableRipple","MoreVertTwoToneIcon","fontSize","Menu","keepMounted","Boolean","onClose","transformOrigin","MenuItem","AlertItemDelete","_Fragment","spacing","Tooltip","MenuBookTwoToneIcon","Link","underline","pt","EditStory","handleDrawerOpen","CardMedia","mt","sub","date","duration","requiredArgs","arguments","_typeof","Date","NaN","years","toInteger","months","weeks","days","hours","minutes","seconds","dateWithoutMonths","dirtyDate","dirtyAmount","amount","addMonths","subMonths","dateWithoutDays","addDays","subDays","mstoSub","getTime","chance","Chance","columnId","addTaskBox","setAddTaskBox","handleAddTaskChange","prev","setTitle","isTitle","setIsTitle","addTask","length","newItem","integer","min","max","dueDate","assign","description","priority","attachments","addItem","Grid","container","marginTop","xs","transition","TextField","newTitle","ml","onKeyUp","key","keyCode","helperText","error","Button","minWidth","PeopleAltTwoToneIcon","CalendarTodayTwoToneIcon","zeroMinWidth","CloseIcon","AlertColumnDelete","Dialog","maxWidth","DialogTitle","DialogContent","DialogContentText","DialogActions","mr","autoFocus","height","getDropWrapper","isDraggingOver","bgcolorDrop","text","disabled","columnsOrder","columnItems","map","deleteColumn","handleColumnDelete","Droppable","droppableId","type","providedDrop","snapshotDrop","droppableProps","gridSpacing","EditColumn","DeleteTwoToneIcon","i","Items","AddItem","AddColumn","isAddColumn","setIsAddColumn","handleAddColumnChange","addNewColumn","newColumn","addColumn","MainCard","pb","Board","Box","DragDropContext","onDragEnd","result","source","destination","newColumnsOrder","Array","from","splice","updateColumnOrder","sourceColumn","destinationColumn","newItemIds","newSourceColumn","newSourceItemIds","newDestinationItemIds","newDestinationColumn","updateColumnItemOrder","Columns","ItemDetails","_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","_default","jsx","d","cx","cy","r","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module"],"sourceRoot":""}