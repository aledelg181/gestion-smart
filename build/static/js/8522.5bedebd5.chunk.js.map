{"version":3,"file":"static/js/8522.5bedebd5.chunk.js","mappings":"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","sources":["hooks/useScriptRef.js","ui-component/cards/AuthFooter.js","utils/password-strength.js","views/pages/authentication/AuthCardWrapper.js","views/pages/authentication/AuthWrapper1.js","views/pages/authentication/auth-forms/AuthResetPassword.js","views/pages/authentication/authentication3/ResetPassword3.js","../node_modules/@mui/icons-material/Visibility.js","../node_modules/@mui/icons-material/VisibilityOff.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\n// ==============================|| ELEMENT REFERENCE HOOKS ||============================== //\n\nconst useScriptRef = () => {\n    const scripted = useRef(true);\n\n    useEffect(\n        () => () => {\n            scripted.current = false;\n        },\n        []\n    );\n\n    return scripted;\n};\n\nexport default useScriptRef;\n","// material-ui\nimport { Link, Typography, Stack } from '@mui/material';\n\n// ==============================|| FOOTER - AUTHENTICATION 2 & 3 ||============================== //\n\nconst AuthFooter = () => (\n    <Stack direction=\"row\" justifyContent=\"space-between\">\n        <Typography variant=\"subtitle2\" component={Link} href=\"https://berrydashboard.io\" target=\"_blank\" underline=\"hover\">\n            berrydashboard.io\n        </Typography>\n        <Typography variant=\"subtitle2\" component={Link} href=\"https://codedthemes.com\" target=\"_blank\" underline=\"hover\">\n            &copy; codedthemes.com\n        </Typography>\n    </Stack>\n);\n\nexport default AuthFooter;\n","/**\n * Password validator for login pages\n */\nimport value from 'assets/scss/_themes-vars.module.scss';\n\n// has number\nconst hasNumber = (number) => new RegExp(/[0-9]/).test(number);\n\n// has mix of small and capitals\nconst hasMixed = (number) => new RegExp(/[a-z]/).test(number) && new RegExp(/[A-Z]/).test(number);\n\n// has special chars\nconst hasSpecial = (number) => new RegExp(/[!#@$%^&*)(+=._-]/).test(number);\n\n// set color based on password strength\nexport const strengthColor = (count) => {\n    if (count < 2) return { label: 'Poor', color: value.errorMain };\n    if (count < 3) return { label: 'Weak', color: value.warningDark };\n    if (count < 4) return { label: 'Normal', color: value.orangeMain };\n    if (count < 5) return { label: 'Good', color: value.successMain };\n    if (count < 6) return { label: 'Strong', color: value.successDark };\n    return { label: 'Poor', color: value.errorMain };\n};\n\n// password strength indicator\nexport const strengthIndicatorNumFunc = (number) => {\n    let strengths = 0;\n    if (number.length > 5) strengths += 1;\n    if (number.length > 7) strengths += 1;\n    if (hasNumber(number)) strengths += 1;\n    if (hasSpecial(number)) strengths += 1;\n    if (hasMixed(number)) strengths += 1;\n    return strengths;\n};\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { Box } from '@mui/material';\n\n// project import\nimport MainCard from 'ui-component/cards/MainCard';\n\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\n\nconst AuthCardWrapper = ({ children, ...other }) => (\n    <MainCard\n        sx={{\n            maxWidth: { xs: 400, lg: 475 },\n            margin: { xs: 2.5, md: 3 },\n            '& > *': {\n                flexGrow: 1,\n                flexBasis: '50%'\n            }\n        }}\n        content={false}\n        {...other}\n    >\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\n    </MainCard>\n);\n\nAuthCardWrapper.propTypes = {\n    children: PropTypes.node\n};\n\nexport default AuthCardWrapper;\n","// material-ui\nimport { styled } from '@mui/material/styles';\n\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\n\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.grey[100],\n    minHeight: '100vh'\n}));\n\nexport default AuthWrapper1;\n","import React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport {\n    Box,\n    Button,\n    FormControl,\n    FormHelperText,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    OutlinedInput,\n    Typography\n} from '@mui/material';\n\n// third party\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\n\n// project imports\nimport useAuth from 'hooks/useAuth';\nimport useScriptRef from 'hooks/useScriptRef';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport { strengthColor, strengthIndicatorNumFunc } from 'utils/password-strength';\n\nimport { dispatch } from 'store';\nimport { openSnackbar } from 'store/slices/snackbar';\n\n// assets\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\n\n// ========================|| FIREBASE - RESET PASSWORD ||======================== //\n\nconst AuthResetPassword = ({ ...others }) => {\n    const theme = useTheme();\n    const navigate = useNavigate();\n    const scriptedRef = useScriptRef();\n    const [showPassword, setShowPassword] = React.useState(false);\n    const [strength, setStrength] = React.useState(0);\n    const [level, setLevel] = React.useState();\n\n    const { isLoggedIn } = useAuth();\n\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const changePassword = (value) => {\n        const temp = strengthIndicatorNumFunc(value);\n        setStrength(temp);\n        setLevel(strengthColor(temp));\n    };\n\n    useEffect(() => {\n        changePassword('');\n    }, []);\n\n    return (\n        <Formik\n            initialValues={{\n                password: '',\n                confirmPassword: '',\n                submit: null\n            }}\n            validationSchema={Yup.object().shape({\n                password: Yup.string().max(255).required('Password is required'),\n                confirmPassword: Yup.string()\n                    .required('Confirm Password is required')\n                    .test(\n                        'confirmPassword',\n                        'Both Password must be match!',\n                        (confirmPassword, yup) => yup.parent.password === confirmPassword\n                    )\n            })}\n            onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n                try {\n                    // password reset\n                    if (scriptedRef.current) {\n                        setStatus({ success: true });\n                        setSubmitting(false);\n\n                        dispatch(\n                            openSnackbar({\n                                open: true,\n                                message: 'Successfuly reset password.',\n                                variant: 'alert',\n                                alert: {\n                                    color: 'success'\n                                },\n                                close: false\n                            })\n                        );\n\n                        setTimeout(() => {\n                            navigate(isLoggedIn ? '/' : '/', { replace: true });\n                        }, 1500);\n                    }\n                } catch (err) {\n                    console.error(err);\n                    if (scriptedRef.current) {\n                        setStatus({ success: false });\n                        setErrors({ submit: err.message });\n                        setSubmitting(false);\n                    }\n                }\n            }}\n        >\n            {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n                <form noValidate onSubmit={handleSubmit} {...others}>\n                    <FormControl fullWidth error={Boolean(touched.password && errors.password)} sx={{ ...theme.typography.customInput }}>\n                        <InputLabel htmlFor=\"outlined-adornment-password-reset\">Password</InputLabel>\n                        <OutlinedInput\n                            id=\"outlined-adornment-password-reset\"\n                            type={showPassword ? 'text' : 'password'}\n                            value={values.password}\n                            name=\"password\"\n                            onBlur={handleBlur}\n                            onChange={(e) => {\n                                handleChange(e);\n                                changePassword(e.target.value);\n                            }}\n                            endAdornment={\n                                <InputAdornment position=\"end\">\n                                    <IconButton\n                                        aria-label=\"toggle password visibility\"\n                                        onClick={handleClickShowPassword}\n                                        onMouseDown={handleMouseDownPassword}\n                                        edge=\"end\"\n                                        size=\"large\"\n                                    >\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                                    </IconButton>\n                                </InputAdornment>\n                            }\n                            inputProps={{}}\n                        />\n                    </FormControl>\n                    {touched.password && errors.password && (\n                        <FormControl fullWidth>\n                            <FormHelperText error id=\"standard-weight-helper-text-reset\">\n                                {errors.password}\n                            </FormHelperText>\n                        </FormControl>\n                    )}\n                    {strength !== 0 && (\n                        <FormControl fullWidth>\n                            <Box sx={{ mb: 2 }}>\n                                <Grid container spacing={2} alignItems=\"center\">\n                                    <Grid item>\n                                        <Box\n                                            style={{ backgroundColor: level?.color }}\n                                            sx={{\n                                                width: 85,\n                                                height: 8,\n                                                borderRadius: '7px'\n                                            }}\n                                        />\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"subtitle1\" fontSize=\"0.75rem\">\n                                            {level?.label}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </Box>\n                        </FormControl>\n                    )}\n\n                    <FormControl\n                        fullWidth\n                        error={Boolean(touched.confirmPassword && errors.confirmPassword)}\n                        sx={{ ...theme.typography.customInput }}\n                    >\n                        <InputLabel htmlFor=\"outlined-adornment-confirm-password\">Confirm Password</InputLabel>\n                        <OutlinedInput\n                            id=\"outlined-adornment-confirm-password\"\n                            type=\"password\"\n                            value={values.confirmPassword}\n                            name=\"confirmPassword\"\n                            label=\"Confirm Password\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            inputProps={{}}\n                        />\n                    </FormControl>\n\n                    {touched.confirmPassword && errors.confirmPassword && (\n                        <FormControl fullWidth>\n                            <FormHelperText error id=\"standard-weight-helper-text-confirm-password\">\n                                {' '}\n                                {errors.confirmPassword}{' '}\n                            </FormHelperText>\n                        </FormControl>\n                    )}\n\n                    {errors.submit && (\n                        <Box sx={{ mt: 3 }}>\n                            <FormHelperText error>{errors.submit}</FormHelperText>\n                        </Box>\n                    )}\n                    <Box sx={{ mt: 1 }}>\n                        <AnimateButton>\n                            <Button\n                                disableElevation\n                                disabled={isSubmitting}\n                                fullWidth\n                                size=\"large\"\n                                type=\"submit\"\n                                variant=\"contained\"\n                                color=\"secondary\"\n                            >\n                                Reset Password\n                            </Button>\n                        </AnimateButton>\n                    </Box>\n                </form>\n            )}\n        </Formik>\n    );\n};\n\nexport default AuthResetPassword;\n","import { Link } from 'react-router-dom';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Grid, Stack, Typography, useMediaQuery } from '@mui/material';\n\n// project imports\nimport AuthWrapper1 from '../AuthWrapper1';\nimport AuthCardWrapper from '../AuthCardWrapper';\nimport Logo from 'ui-component/Logo';\nimport AuthResetPassword from '../auth-forms/AuthResetPassword';\nimport AuthFooter from 'ui-component/cards/AuthFooter';\n\n// assets\n\n// ============================|| AUTH3 - RESET PASSWORD ||============================ //\n\nconst ResetPassword = () => {\n    const theme = useTheme();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n\n    return (\n        <AuthWrapper1>\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\n                <Grid item xs={12}>\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n                            <AuthCardWrapper>\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n                                    <Grid item sx={{ mb: 3 }}>\n                                        <Link to=\"#\" aria-label=\"theme-logo\">\n                                            <Logo />\n                                        </Link>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid\n                                            container\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\n                                            alignItems=\"center\"\n                                            justifyContent=\"center\"\n                                        >\n                                            <Grid item>\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\n                                                    <Typography\n                                                        color={theme.palette.secondary.main}\n                                                        gutterBottom\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\n                                                    >\n                                                        Reset Password\n                                                    </Typography>\n                                                    <Typography\n                                                        variant=\"caption\"\n                                                        fontSize=\"16px\"\n                                                        textAlign={matchDownSM ? 'center' : 'inherit'}\n                                                    >\n                                                        Please choose your new password\n                                                    </Typography>\n                                                </Stack>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <AuthResetPassword />\n                                    </Grid>\n                                </Grid>\n                            </AuthCardWrapper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\n                    <AuthFooter />\n                </Grid>\n            </Grid>\n        </AuthWrapper1>\n    );\n};\n\nexport default ResetPassword;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexports.default = _default;"],"names":["useScriptRef","scripted","useRef","useEffect","current","AuthFooter","_jsxs","Stack","direction","justifyContent","children","_jsx","Typography","variant","component","Link","href","target","underline","strengthColor","count","label","color","value","errorMain","warningDark","orangeMain","successMain","successDark","strengthIndicatorNumFunc","number","strengths","length","RegExp","test","hasNumber","hasSpecial","hasMixed","_ref","other","MainCard","sx","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","Box","p","sm","xl","styled","theme","backgroundColor","palette","mode","background","default","grey","minHeight","others","useTheme","navigate","useNavigate","scriptedRef","showPassword","setShowPassword","React","strength","setStrength","level","setLevel","isLoggedIn","useAuth","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","changePassword","temp","Formik","initialValues","password","confirmPassword","submit","validationSchema","Yup","shape","max","required","yup","parent","onSubmit","async","values","_ref2","setErrors","setStatus","setSubmitting","success","dispatch","openSnackbar","open","message","alert","close","setTimeout","replace","err","console","error","_ref3","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","FormControl","fullWidth","Boolean","typography","customInput","InputLabel","htmlFor","OutlinedInput","id","type","name","onBlur","onChange","e","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","size","Visibility","VisibilityOff","inputProps","FormHelperText","mb","Grid","container","spacing","alignItems","item","style","width","height","borderRadius","fontSize","mt","AnimateButton","Button","disableElevation","disabled","ResetPassword","matchDownSM","useMediaQuery","breakpoints","down","AuthWrapper1","m","AuthCardWrapper","to","Logo","secondary","main","gutterBottom","textAlign","AuthResetPassword","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","jsx","d"],"sourceRoot":""}